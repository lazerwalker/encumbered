{"version":3,"sources":["GridCalculator.tsx","stateManager.ts","Room.ts","components/EditorButton.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TileType","GridCalculator","state","_state$currentRoom","currentRoom","size","enemies","tiredEnemies","exits","walls","player","result","safeSet","x","y","type","i","j","Floor","HorizontalWall","VerticalWall","BottomLeftCorner","BottomRightCorner","TopLeftCorner","TopRightCorner","forEach","w","Wall","e","Door","items","heldType","Player","EnemyTired","Enemy","require","astar","Graph","moveLeft","processPlayerChange","Object","objectSpread","moveRight","moveUp","moveDown","wait","release","newItems","toConsumableArray","playerItems","item","newItem","push","_","without","length","oldState","_player$items","cloneDeep","destroyedItems","pickedUpItems","destroyedHeldItems","stopMovement","find","pickUpItem","heldItem","ItemSword","apply","concat","resolveItemCollisions","playerCoordinates","map","intersectionWith","isEqual","edgeTiles","differenceWith","boundsCoordinates","blockTiles","filter","ItemBlock","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","undefined","_step3","_loop2","value","blocker","v","_iterator3","Symbol","iterator","next","done","_ret2","err","return","avoidsWallCollisions","flatten","t","PlayerItem","hasExitedRoom","exited","newState","passableTypes","HeldItemBlock","HeldItemMoney","HeldItemNormal","HeldItemPush","HeldItemSword","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","enemy","graph","grid","includes","reverse","shift","console","log","g","join","searchGraph","search","heuristic","heuristics","manhattan","r","newPos","oldPos","hp","gameOver","_iterator","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tiredEnemy","moveEnemies","generateRoom","entrance","allCoordinates","shuffle","numberOfItems","random","pos","randomItem","numberOfEnemies","directions","Infinity","numberOfExits","template","doorSize","sample","start","types","ItemMoney","ItemNormal","ItemPush","EditorButton","handleClick","_this","props","onClick","react","className","this","selected","data-tiletype","key","dangerouslySetInnerHTML","__html","onTouchStart","React","nipplejs","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","joystickTimerId","maybeTouch","initialState","undoStack","perform","action","arguments","handleJoystickMove","clearTimeout","target","direction","angle","up","down","left","right","setTimeout","repeat","setState","handleJoystickEnd","handleKeyDown","keyMap","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Space","Period","code","pop","a","didTapDrop","handleTouchStart","handleTouchMove","handleTouchEnd","handleEditorButtonClick","selectedEditorButton","handleEditorBoardClick","maxHP","_this2","window","addEventListener","create","color","dataOnly","fadeTime","on","evt","nipple","removeEventListener","_this3","tiles","row","rowIdx","mappedRow","tile","colIdx","react_default","createElement","data-x","data-y","id","printGrid","score","editorButtons","components_EditorButton","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.047ece56.chunk.js","sourcesContent":["import { State } from \"./App\";\nimport _ from \"lodash\";\n\nexport enum TileType {\n  Floor = \"&nbsp;\",\n  Wall = \"█\",\n  Player = \"<span style='background-color: #aaa'>@</span>\",\n  Door = \"#\",\n\n  Enemy = \"<span style='color: red'>k</span>\",\n  EnemyTired = \"<span style='color: darkred'>k</span>\",\n\n  ItemSword = \"<span style='color: red'>†</span>\",\n  ItemMoney = \"<span style='color: green'>$</span>\",\n  ItemNormal = \"<span style='color: lightblue'>!</span>\",\n  ItemPush = \"<span style='color: yellow'>O</span>\",\n  ItemBlock = \"<span style='color: saddlebrown'>+</span>\",\n\n\n  HeldItemSword = \"<span style='color: red; background-color: #aaa'>†</span>\",\n  HeldItemMoney = \"<span style='color: green; background-color: #aaa'>$</span>\",\n  HeldItemNormal = \"<span style='color: lightblue; background-color: #aaa'>!</span>\",\n  HeldItemPush = \"<span style='color: yellow; background-color: #aaa'>O</span>\",\n  HeldItemBlock = \"<span style='color: saddlebrown; background-color: #aaa''>+</span>\",\n\n  PlayerItem = \"$\",\n  Item = \"!\",\n\n\n  VerticalWall = \"│\",\n  HorizontalWall = \"─\",\n  TopLeftCorner = \"┌\",\n  TopRightCorner = \"┐\",\n  BottomLeftCorner = \"└\",\n  BottomRightCorner = \"┘\",\n}\n\nexport interface GamePosition {\n  x: number, y: number\n}\n\n// (0, 0) is bottom-left\nexport default function (state: State): TileType[][] {\n  const { size, enemies, tiredEnemies, exits, walls } = state.currentRoom\n  const player = state.player\n\n  let result: TileType[][] = []\n\n  function safeSet(x: number, y: number, type: TileType) {\n    if (x < -1\n      || x > size\n      || y < -1\n      || y > size) { return }\n\n    result[size - y][x + 1] = type\n  }\n\n  for (let i = 0; i <= size + 1; i++) {\n    result[i] = []\n    for (let j = 0; j <= size + 1; j++) {\n      result[i][j] = TileType.Floor\n    }\n  }\n\n  for (let i = -1; i <= size; i++) {\n    safeSet(i, -1, TileType.HorizontalWall)\n    safeSet(i, size, TileType.HorizontalWall)\n\n    safeSet(-1, i, TileType.VerticalWall)\n    safeSet(size, i, TileType.VerticalWall)\n  }\n\n  safeSet(-1, -1, TileType.BottomLeftCorner)\n  safeSet(size, -1, TileType.BottomRightCorner)\n  safeSet(-1, size, TileType.TopLeftCorner)\n  safeSet(size, size, TileType.TopRightCorner)\n\n  walls.forEach(w => {\n    safeSet(w.x, w.y, TileType.Wall)\n  })\n\n  exits.forEach(e => {\n    safeSet(e.x, e.y, TileType.Door)\n  })\n\n  state.currentRoom.items.forEach(i => {\n    safeSet(i.x, i.y, i.type)\n  })\n\n  state.player.items.forEach(i => {\n    safeSet(i.x + state.player.x, i.y + state.player.y, i.heldType)\n  })\n  safeSet(player.x, player.y, TileType.Player)\n\n  tiredEnemies.forEach(e => {\n    safeSet(e.x, e.y, TileType.EnemyTired)\n  })\n\n  enemies.forEach(e => {\n    safeSet(e.x, e.y, TileType.Enemy)\n  })\n\n  return result\n}\n\n// Coords of all room wall tiles, without the corridors\nexport function boundsCoordinates(state: State): GamePosition[] {\n  let result: GamePosition[] = []\n\n  for (let i = -1; i <= state.currentRoom.size; i++) {\n    result.push({ x: -1, y: i })\n    result.push({ x: state.currentRoom.size, y: i })\n    result.push({ x: i, y: -1 })\n    result.push({ x: i, y: state.currentRoom.size })\n  }\n\n  return _.differenceWith(result, state.currentRoom.exits, _.isEqual)\n}","import { State } from \"./App\";\nimport GridCalculator, { GamePosition, boundsCoordinates, TileType } from \"./GridCalculator\";\nimport { Item, Player } from \"./Player\";\n\nimport _ from \"lodash\";\nconst { astar, Graph } = require('javascript-astar')\n\nexport type GameReducer = (state: State) => State\n\nexport function moveLeft(state: State): State {\n  const player = { ...state.player, x: state.player.x - 1 }\n  return processPlayerChange(player, state)\n}\nexport function moveRight(state: State): State {\n  const player = { ...state.player, x: state.player.x + 1 }\n  return processPlayerChange(player, state)\n}\n\nexport function moveUp(state: State): State {\n  const player = { ...state.player, y: state.player.y + 1 }\n  return processPlayerChange(player, state)\n}\n\nexport function moveDown(state: State): State {\n  const player = { ...state.player, y: state.player.y - 1 }\n  return processPlayerChange(player, state)\n}\n\nexport function wait(state: State): State {\n  return processPlayerChange(state.player, state)\n}\n\nexport function release(state: State): State {\n  let newItems: Item[] = [...state.currentRoom.items]\n  let playerItems = state.player.items\n\n  state.player.items.forEach(i => {\n    let newItem = dropItem(state.player, i)\n    newItems.push(newItem)\n    playerItems = _.without(playerItems, i)\n  })\n\n  if (newItems.length > 0) {\n    return {\n      ...state,\n      player: { ...state.player, items: playerItems },\n      currentRoom: { ...state.currentRoom, items: newItems }\n    }\n  } else {\n    return state\n  }\n}\n\nfunction processPlayerChange(player: Player, oldState: State): State {\n  let state = resolveItemCollisions({ ...oldState, player }, oldState)\n\n  if (!avoidsWallCollisions(state)) {\n    console.log(\"Wall?\")\n    return oldState\n  }\n\n  if (hasExitedRoom(state)) {\n    state.exited = true\n  }\n\n  state = moveEnemies(state)\n\n  return state\n}\n\n// TODO: This should be factored out into an enemy-specific file\nfunction moveEnemies(state: State): State {\n  let newState = _.cloneDeep(state)\n\n  let passableTypes = [\n    TileType.Floor,\n    TileType.Player,\n\n    TileType.HeldItemBlock,\n    TileType.HeldItemMoney,\n    TileType.HeldItemNormal,\n    TileType.HeldItemPush,\n    TileType.HeldItemSword\n  ]\n\n  for (const enemy of newState.currentRoom.enemies) {\n    // Before moving:\n    // It's possible that the player moved one of their items into the enemy.\n    // If that's the case, resolve that rather than do anything fancier.\n    // (We could resolve this when we resolve item movement, but that also feels weird?)\n    const item = newState.player.items.find(i => i.x + newState.player.x === enemy.x && i.y + newState.player.y === enemy.y)\n    if (item) {\n      newState.currentRoom.enemies = _.without(newState.currentRoom.enemies, enemy)\n      newState.currentRoom.tiredEnemies.push(enemy)\n      newState.player.items = _.without(newState.player.items, item)\n      continue\n    }\n\n    // Okay, now that's over with, let's do normal pathfinding.\n\n    // TODO: Here's where the frustrating math changes need to go to allow players to be in doorways\n    let graph: number[][] = [[]]\n    let grid = GridCalculator(newState)\n    for (let i = 0; i < grid.length - 2; i++) {\n      graph.push([])\n      for (let j = 0; j < grid[i].length - 2; j++) {\n        if (_.includes(passableTypes, grid[i + 1][j + 1])) {\n          graph[i][j] = 1\n        } else {\n          graph[i][j] = 0\n        }\n      }\n    }\n    graph = graph.reverse() // Our y-axis is reversed\n    graph.shift()\n\n\n    console.log(\"%cPathfinding Grid\", \"font-weight: bold\")\n    console.log(`%c${graph.map((g, i) => `${i}: ${g.join(\"\")}`).join(\"\\n\")}`, \"font-family: monospace\")\n    let searchGraph = new Graph(graph)\n\n    console.log(`(${state.player.x}, ${state.player.y})`, `(${enemy.x}, ${enemy.y})`)\n    const result = astar.search(\n      searchGraph,\n      searchGraph.grid[enemy.y][enemy.x],\n      searchGraph.grid[state.player.y][state.player.x],\n      { heuristic: astar.heuristics.manhattan }\n    );\n\n    console.log(result.map((r: any) => `(${r.x}, ${r.y})`).join(\" \"))\n\n    if (result.length > 0) {\n      const newPos = { x: result[0].y, y: result[0].x }\n      const oldPos = { x: enemy.x, y: enemy.y }\n\n      enemy.x = newPos.x\n      enemy.y = newPos.y\n      console.log(newPos)\n\n      if (state.player.x === enemy.x && state.player.y === enemy.y) {\n        newState.hp -= 1\n        enemy.x = oldPos.x\n        enemy.y = oldPos.y\n        if (newState.hp <= 0) {\n          newState.gameOver = true\n        }\n      }\n\n      const item = newState.player.items.find(i => newState.player.x + i.x === enemy.x && newState.player.y + i.y === enemy.y)\n      if (item) {\n        enemy.x = oldPos.x\n        enemy.y = oldPos.y\n\n        if (item.type !== TileType.ItemSword) {\n          // If it's a sword, we'll just say they didn't move, rather than them consuming the item\n          newState.currentRoom.enemies = _.without(newState.currentRoom.enemies, enemy)\n          newState.currentRoom.tiredEnemies.push(enemy)\n          newState.player.items = _.without(newState.player.items, item)\n        }\n      }\n    }\n  }\n\n  for (const tiredEnemy of state.currentRoom.tiredEnemies) {\n    newState.currentRoom.tiredEnemies = _.without(newState.currentRoom.enemies, tiredEnemy)\n    newState.currentRoom.enemies.push(tiredEnemy)\n  }\n\n  console.log(newState)\n  return newState\n}\n\nfunction avoidsWallCollisions(state: State): boolean {\n  let playerCoordinates: GamePosition[] = state.player.items.map(i => {\n    return { x: i.x + state.player.x, y: i.y + state.player.y }\n  })\n  playerCoordinates.push({ x: state.player.x, y: state.player.y })\n\n  // If any player bit intersects with a wall, collide\n  if (_.intersectionWith(playerCoordinates, state.currentRoom.walls, _.isEqual).length > 0) {\n    return false\n  }\n\n  // If any player bit is over an edge, collide\n  let edgeTiles = boundsCoordinates(state)\n  if (_.intersectionWith(playerCoordinates, edgeTiles, _.isEqual).length > 0) {\n    return false\n  }\n\n  // Check if the player is holding any Block tiles\n  let blockTiles = state.player.items\n    .filter(i => i.type === TileType.ItemBlock)\n    .map(i => ({ x: i.x + state.player.x, y: i.y + state.player.y }))\n\n  for (let heldItem of blockTiles) {\n    let blocker = state.currentRoom.items.find(i => i.x === heldItem.x && i.y === heldItem.y)\n    if (blocker) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction resolveItemCollisions(state: State, oldState: State): State {\n  let player = state.player\n  let enemies = _.cloneDeep(state.currentRoom.enemies)\n  let destroyedItems: Item[] = []\n  let pickedUpItems: Item[] = []\n  let destroyedHeldItems: Item[] = []\n\n  let stopMovement = false\n\n  // Player\n  let i = _.find(state.currentRoom.items, i => i.x === player.x && i.y === player.y)\n  if (i) {\n    destroyedItems.push(i)\n    pickedUpItems.push(pickUpItem(oldState.player, i))\n    stopMovement = true\n  }\n\n  // Let's treat the enemy as a block\n  // That is, if the PLAYER (not their item) bumps into it, ignore\n  let enemy = _.find(state.currentRoom.enemies, e => e.x === player.x && e.y === player.y)\n  if (enemy) {\n    stopMovement = true\n  }\n\n  player.items.forEach(heldItem => {\n    // Pick up items\n    let i = _.find(state.currentRoom.items, i => i.x === heldItem.x + player.x && i.y === heldItem.y + player.y)\n    if (i) {\n      stopMovement = true\n      destroyedItems.push(i)\n      pickedUpItems.push(pickUpItem(oldState.player, i))\n    }\n\n    // Kill enemy!\n    if (heldItem.type === TileType.ItemSword) {\n      let e = _.find(enemies, e => e.x === heldItem.x + player.x && e.y === heldItem.y + player.y)\n      if (e) {\n        destroyedHeldItems.push(heldItem)\n        enemies = _.without(enemies, e)\n        stopMovement = true\n      }\n    }\n\n  })\n\n  if (stopMovement) {\n    player.x = oldState.player.x\n    player.y = oldState.player.y\n  }\n\n  const items = _.without(state.currentRoom.items, ...destroyedItems)\n  player.items.push(...pickedUpItems)\n  player.items = _.without(player.items, ...destroyedHeldItems)\n\n  return { ...state, player, currentRoom: { ...state.currentRoom, enemies, items } }\n}\n\nfunction hasExitedRoom(state: State): boolean {\n  const result = _.flatten(GridCalculator(state))\n  return !_.find(result, t => t === TileType.Player || t === TileType.PlayerItem)\n}\n\nfunction pickUpItem(player: Player, item: Item): Item {\n  return {\n    ...item,\n    x: item.x - player.x,\n    y: item.y - player.y\n  }\n}\n\nfunction dropItem(player: Player, item: Item): Item {\n  return {\n    ...item,\n    x: item.x + player.x,\n    y: item.y + player.y\n  }\n}","import { GamePosition, TileType } from \"./GridCalculator\";\nimport { Player, Item } from \"./Player\";\nimport _ from \"lodash\";\n\nexport interface Room {\n  exits: GamePosition[]\n  items: Item[]\n  size: number\n  enemies: GamePosition[]\n  tiredEnemies: GamePosition[]\n  walls: GamePosition[]\n}\n\nexport function generateRoom(entrance: GamePosition[]): Room {\n  const size = 8\n\n  let allCoordinates: GamePosition[] = []\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      allCoordinates.push({ x: j, y: i })\n    }\n  }\n\n  allCoordinates = _.shuffle(allCoordinates)\n\n  const numberOfItems = _.random(3, 8)\n  let items: Item[] = []\n\n  for (let i = 0; i < numberOfItems; i++) {\n    let pos = allCoordinates.shift()!\n    items.push(randomItem(pos))\n  }\n\n  let enemies: GamePosition[] = []\n  const numberOfEnemies = _.filter(items, i => i.type === TileType.ItemSword).length\n  for (let i = 0; i < numberOfEnemies; i++) {\n    let pos = allCoordinates.shift()!\n    enemies.push(pos)\n  }\n\n\n  let exits = [...entrance]\n  const directions: GamePosition[] = _.shuffle([\n    { x: -1, y: Infinity },\n    { x: size, y: Infinity },\n    { x: Infinity, y: -1 },\n    { x: Infinity, y: size }\n  ])!\n\n  const numberOfExits = _.random(1, 3)\n  for (let i = 0; i < numberOfExits; i++) {\n    const template = directions.shift()!\n\n    const doorSize = _.sample([1, 2, 2, 2, 3, 3, 4])!\n    const start = _.random(0, size - 1 - doorSize)\n    for (let j = 0; j < doorSize; j++) {\n      let e = { x: template.x, y: template.y } // lol TS\n      if (e.x === Infinity) {\n        e.x = start + j\n      } else if (e.y === Infinity) {\n        e.y = start + j\n      }\n\n      exits.push(e)\n    }\n  }\n\n  return {\n    size,\n    exits,\n    items,\n    enemies,\n    tiredEnemies: [],\n    walls: []\n  }\n}\n\nfunction randomItem(pos: GamePosition) {\n  const types: [TileType, TileType][] = [\n    [TileType.ItemSword, TileType.HeldItemSword],\n    [TileType.ItemMoney, TileType.HeldItemMoney],\n    [TileType.ItemNormal, TileType.HeldItemNormal],\n    [TileType.ItemPush, TileType.HeldItemPush],\n    [TileType.ItemBlock, TileType.HeldItemBlock],\n  ]\n\n  const type = _.sample(types)!\n\n  return {\n    ...pos,\n    type: type[0],\n    heldType: type[1]\n  }\n}","import * as React from 'react'\nimport { TileType } from '../GridCalculator';\n\ninterface Props {\n  type: TileType\n  selected: boolean\n  onClick: (type: TileType) => void\n}\n\nclass EditorButton extends React.Component<Props> {\n  render() {\n    return (\n      <div\n        className={this.props.selected ? \"selected\" : \"\"}\n        data-tiletype={this.props.type}\n        key={this.props.type}\n        dangerouslySetInnerHTML={{ __html: this.props.type }}\n        onTouchStart={this.handleClick}\n      />\n    )\n  }\n\n  handleClick = () => {\n    this.props.onClick(this.props.type)\n  }\n}\n\nexport default EditorButton","import React from 'react';\nimport './App.css';\nimport GridCalculator, { TileType } from './GridCalculator';\nimport { Player, Item } from './Player';\nimport { moveLeft, GameReducer, moveUp, moveDown, moveRight, release, wait } from './stateManager';\nimport _ from 'lodash';\nimport { Room, generateRoom } from './Room';\nimport EditorButton from './components/EditorButton'\n\nconst nipplejs = require('nipplejs')\n\n// TODO: Looool, this should be properly React Component-ified\nconst printGrid = (props: { tiles: TileType[][], size: number, onClick: (x: number, y: number) => void }) => {\n  const grid = props.tiles.map((row, rowIdx) => {\n    const mappedRow = row.map((tile, colIdx) => {\n      return <span\n        data-x={colIdx - 1}\n        data-y={props.size - rowIdx}\n        dangerouslySetInnerHTML={{ __html: tile }}\n        onTouchStart={() => props.onClick(colIdx - 1, props.size - rowIdx)}\n      />\n    })\n    return <div>{mappedRow}</div>\n  })\n\n  return <div id='grid'>{grid}</div>\n}\n\nexport interface State {\n  currentRoom: Room\n  player: Player\n\n  hp: number\n  maxHP: number\n\n  exited: boolean\n  gameOver: boolean\n\n  selectedEditorButton?: TileType\n}\n\nclass App extends React.Component<{}, State> {\n  joystickTimerId: NodeJS.Timeout | undefined\n  maybeTouch: boolean = false\n\n  initialState: State\n  undoStack: GameReducer[] = []\n\n  constructor(props: any) {\n    super(props)\n    this.initialState = {\n      exited: false,\n      gameOver: false,\n      hp: 3,\n      maxHP: 3,\n      player: {\n        x: 2,\n        y: 2,\n        items: []\n      },\n      currentRoom: generateRoom([{ x: -1, y: 4 }])\n    }\n\n    this.state = _.cloneDeep(this.initialState)\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown)\n\n    window.addEventListener('touchstart', this.handleTouchStart)\n    window.addEventListener('touchmove', this.handleTouchMove)\n    window.addEventListener('touchend', this.handleTouchEnd)\n\n    var manager = nipplejs.create({\n      color: \"#000\",\n      dataOnly: true,\n      fadeTime: 0,\n    });\n\n    manager.on('added', (evt: any, nipple: any) => {\n      nipple.on('dir', this.handleJoystickMove)\n      nipple.on('end', this.handleJoystickEnd)\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  render() {\n    const grid = printGrid({ tiles: GridCalculator(this.state), size: this.state.currentRoom.size, onClick: this.handleEditorBoardClick })\n\n    const score = this.state.player.items.filter(i => i.type === TileType.ItemMoney).length\n\n    const editorButtons = [\n      TileType.Player,\n      TileType.Enemy,\n      TileType.ItemBlock,\n      TileType.ItemMoney,\n      TileType.ItemNormal,\n      TileType.ItemSword,\n      TileType.Wall,\n      TileType.Door\n    ].map(t => <EditorButton type={t} onClick={this.handleEditorButtonClick} selected={this.state.selectedEditorButton === t} />)\n\n    return (\n      <div className=\"App\">\n        <div id='score-and-hp'>${score} | {this.state.hp}/{this.state.maxHP}</div>\n        {grid}\n\n        <div id='level-editor'>\n          {editorButtons}\n        </div>\n      </div>\n    );\n  }\n\n  perform = (action: GameReducer, state: State = this.state): State => {\n    let result = action(state)\n\n    if (!_.isEqual(result, state)) {\n      this.undoStack.push(action)\n    }\n\n    // TODO: This should live elsewhere\n    if (result.gameOver) {\n      console.log(result, this.initialState)\n      return _.cloneDeep(this.initialState)\n    }\n\n    return result\n  }\n\n  handleJoystickMove = (e: any) => {\n    if (this.joystickTimerId) {\n      clearTimeout(this.joystickTimerId)\n    }\n\n    console.log(e.target.direction.angle)\n    let keyMap: { [dir: string]: GameReducer } = {\n      \"up\": moveUp,\n      \"down\": moveDown,\n      \"left\": moveLeft,\n      \"right\": moveRight,\n    }\n    const result = keyMap[e.target.direction.angle];\n    if (!result) {\n      console.log(\"COULD NOT FIND HANDLER\", e)\n      return\n    }\n\n    const repeat = () => {\n      this.setState(this.perform(result))\n      this.joystickTimerId = setTimeout(repeat, 150)\n    }\n\n    this.joystickTimerId = setTimeout(repeat, 300)\n    this.setState(this.perform(result))\n  }\n\n  handleJoystickEnd = (e: any) => {\n    if (this.joystickTimerId) {\n      clearTimeout(this.joystickTimerId)\n    }\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    let keyMap: { [keyCode: string]: GameReducer } = {\n      \"ArrowUp\": moveUp,\n      \"ArrowDown\": moveDown,\n      \"ArrowLeft\": moveLeft,\n      \"ArrowRight\": moveRight,\n      \"Space\": release,\n      \"Period\": wait\n    }\n\n    if (e.code === 'KeyU' || e.code === \"KeyZ\") {\n      let state = _.cloneDeep(this.initialState)\n      this.undoStack.pop()\n      for (let a of this.undoStack) {\n        state = a(state)\n      }\n      this.setState(state)\n      return\n    }\n\n    const result = keyMap[e.code];\n    if (!result) {\n      console.log(\"COULD NOT FIND HANDLER\", e)\n      return\n    }\n\n    this.setState(this.perform(result))\n  }\n\n  didTapDrop = () => {\n    this.setState(this.perform(release))\n  }\n\n  handleTouchStart = (e: any) => {\n    this.maybeTouch = true\n  }\n\n  handleTouchMove = (e: any) => {\n    this.maybeTouch = false\n  }\n\n  handleTouchEnd = (e: any) => {\n    if (this.maybeTouch) {\n      this.didTapDrop()\n    }\n    this.maybeTouch = false\n  }\n\n  handleEditorButtonClick = (t: TileType) => {\n    this.setState({ selectedEditorButton: t })\n  }\n\n  handleEditorBoardClick = (x: number, y: number) => {\n    const type = this.state.selectedEditorButton\n    if (!type) return\n\n    if (type === TileType.Player) {\n      this.setState({\n        selectedEditorButton: undefined,\n        player: { ...this.state.player, x, y }\n      })\n    } else if (type === TileType.Enemy) {\n      const enemies = [...this.state.currentRoom.enemies, { x, y, type }]\n      this.setState({\n        selectedEditorButton: undefined,\n        currentRoom: { ...this.state.currentRoom, enemies }\n      })\n    } else if (type === TileType.Door) {\n      const exits = [...this.state.currentRoom.exits, { x, y }]\n      this.setState({\n        selectedEditorButton: undefined,\n        currentRoom: { ...this.state.currentRoom, exits }\n      })\n    } else if (type === TileType.Wall) {\n      const walls = [...this.state.currentRoom.walls, { x, y }]\n      this.setState({\n        selectedEditorButton: undefined,\n        currentRoom: { ...this.state.currentRoom, walls }\n      })\n    } else {\n      const heldType = (type: TileType): TileType => {\n        if (type === TileType.ItemBlock) return TileType.HeldItemBlock\n        if (type === TileType.ItemNormal) return TileType.HeldItemNormal\n        if (type === TileType.ItemMoney) return TileType.HeldItemMoney\n        if (type === TileType.ItemSword) return TileType.HeldItemSword\n        if (type === TileType.ItemPush) return TileType.HeldItemPush\n        return type\n      }\n\n      const item = { x, y, type, heldType: heldType(type) }\n      const items = [...this.state.currentRoom.items, item]\n      this.setState({\n        selectedEditorButton: undefined,\n        currentRoom: { ...this.state.currentRoom, items }\n      })\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}